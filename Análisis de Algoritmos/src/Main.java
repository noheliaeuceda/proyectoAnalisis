
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.graphstream.graph.*;
import org.graphstream.graph.implementations.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Euceda
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_KnapSack = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_items = new javax.swing.JTable();
        btn_knapsack = new javax.swing.JButton();
        btn_fillItems = new javax.swing.JButton();
        sp_cantidad2 = new javax.swing.JSpinner();
        Title1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sp_espacio = new javax.swing.JSpinner();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_myitems = new javax.swing.JTable();
        tf_myweigth = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pop_Sort = new javax.swing.JPopupMenu();
        mi_sortBenefit = new javax.swing.JMenuItem();
        Graf1 = new javax.swing.JButton();
        btn_VertexCover = new javax.swing.JButton();
        Graf3 = new javax.swing.JButton();
        Graf2 = new javax.swing.JButton();
        Graf4 = new javax.swing.JButton();
        btn_KnapSack = new javax.swing.JButton();
        Title = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        tb_items.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Precio", "Peso", "Beneficio"
            }
        ));
        tb_items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_itemsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tb_items);

        btn_knapsack.setText("KnapSack");
        btn_knapsack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_knapsackActionPerformed(evt);
            }
        });

        btn_fillItems.setText("Generar Items");
        btn_fillItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fillItemsActionPerformed(evt);
            }
        });

        sp_cantidad2.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(2), null, Integer.valueOf(2)));

        Title1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Title1.setText("An√°lisis de Algoritmos");

        jLabel1.setText("Cantidad de Items");

        jLabel2.setText("Espacio en mochila");

        sp_espacio.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(1), null, Integer.valueOf(10)));

        tb_myitems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Precio", "Peso", "Beneficio"
            }
        ));
        tb_myitems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_myitemsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tb_myitems);

        tf_myweigth.setEditable(false);

        jLabel5.setText("Mi peso");

        javax.swing.GroupLayout jd_KnapSackLayout = new javax.swing.GroupLayout(jd_KnapSack.getContentPane());
        jd_KnapSack.getContentPane().setLayout(jd_KnapSackLayout);
        jd_KnapSackLayout.setHorizontalGroup(
            jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_KnapSackLayout.createSequentialGroup()
                .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_KnapSackLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_knapsack, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_fillItems))
                        .addGap(18, 18, 18)
                        .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jd_KnapSackLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(sp_cantidad2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jd_KnapSackLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(sp_espacio, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jd_KnapSackLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_KnapSackLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_KnapSackLayout.createSequentialGroup()
                        .addComponent(Title1)
                        .addGap(271, 271, 271))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_KnapSackLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_myweigth, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262))))
        );
        jd_KnapSackLayout.setVerticalGroup(
            jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_KnapSackLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(Title1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_KnapSackLayout.createSequentialGroup()
                        .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btn_knapsack)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_fillItems)
                            .addComponent(sp_cantidad2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sp_espacio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_KnapSackLayout.createSequentialGroup()
                        .addGroup(jd_KnapSackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_myweigth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        mi_sortBenefit.setText("jMenuItem1");
        mi_sortBenefit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_sortBenefitActionPerformed(evt);
            }
        });
        pop_Sort.add(mi_sortBenefit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Graf1.setText("Grafo 1");
        Graf1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Graf1MouseClicked(evt);
            }
        });

        btn_VertexCover.setText("Vertex Cover");
        btn_VertexCover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_VertexCoverActionPerformed(evt);
            }
        });

        Graf3.setText("Grafo 2");
        Graf3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Graf3ActionPerformed(evt);
            }
        });

        Graf2.setText("Grafo 3");
        Graf2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Graf2ActionPerformed(evt);
            }
        });

        Graf4.setText("Grafo 4");
        Graf4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Graf4ActionPerformed(evt);
            }
        });

        btn_KnapSack.setText("KnapSack 0-1");
        btn_KnapSack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_KnapSackActionPerformed(evt);
            }
        });

        Title.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Title.setText("An√°lisis de Algoritmos");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafo.PNG"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/knapsack.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Graf3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Graf4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Graf1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Graf2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btn_VertexCover)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btn_KnapSack)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Title)
                .addGap(119, 119, 119))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Title)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(76, 76, 76)
                        .addComponent(btn_KnapSack)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_VertexCover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Graf1)
                            .addComponent(Graf2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Graf3)
                            .addComponent(Graf4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Graf1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Graf1MouseClicked
        //Grafo 1
        ejemplo = 1;
        graph.clear();
        Grafo1();
        if (!displayed) {
            graph.display();
            displayed = true;
        }
    }//GEN-LAST:event_Graf1MouseClicked

    private void btn_VertexCoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_VertexCoverActionPerformed
        //Vertex Cover
        int cont = VertexCover();
        if (ejemplo != -1) {
            graph.clear();
            if (ejemplo == 1) {
                Grafo1();
            } else if (ejemplo == 2) {
                Grafo2();
            } else if (ejemplo == 3) {
                Grafo3();
            } else {
                Grafo4();
            }
        }
        System.out.println("El m√≠nimo de polic√≠as es: " + cont);
        JOptionPane.showMessageDialog(this, "El m√≠nimo de v√©rtices es: " + cont / 2);
    }//GEN-LAST:event_btn_VertexCoverActionPerformed

    private void Graf3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Graf3ActionPerformed
        //Grafo 2
        ejemplo = 2;
        graph.clear();
        Grafo2();
        if (!displayed) {
            graph.display();
            displayed = true;
        }
    }//GEN-LAST:event_Graf3ActionPerformed

    private void Graf2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Graf2ActionPerformed
        //Grafo 3
        ejemplo = 3;
        graph.clear();
        Grafo3();
        if (!displayed) {
            graph.display();
            displayed = true;
        }
    }//GEN-LAST:event_Graf2ActionPerformed

    private void Graf4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Graf4ActionPerformed
        //Grafo 4
        ejemplo = 4;
        graph.clear();
        Grafo4();
        if (!displayed) {
            graph.display();
            displayed = true;
        }
    }//GEN-LAST:event_Graf4ActionPerformed

    private void btn_KnapSackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_KnapSackActionPerformed
        //KnapSnack
        jd_KnapSack.setVisible(true);
        jd_KnapSack.pack();
        jd_KnapSack.setLocationRelativeTo(this);
        jd_KnapSack.setModal(true);
    }//GEN-LAST:event_btn_KnapSackActionPerformed

    private void btn_fillItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fillItemsActionPerformed
        //Generar Items
        try {
            FillList((int) sp_cantidad2.getValue());
        } catch (Exception e) {
            FillList(10);
        }
        UpdateTable();
    }//GEN-LAST:event_btn_fillItemsActionPerformed

    private void btn_knapsackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_knapsackActionPerformed
        //KnapSnack
        Collections.sort(sack);
        int space = (int) sp_espacio.getValue();
        ArrayList<Item> onSack = KnapSack(space);
        JOptionPane.showMessageDialog(jd_KnapSack, "Mochila llena con " + tf_myweigth.getText() + " de peso");
        DefaultTableModel myModel = (DefaultTableModel) tb_myitems.getModel();
        while (myModel.getRowCount()>0) {
            myModel.removeRow(0);
        }
                Object[] row = new Object[3];
        int cash, weight;
        double benefit;
        for (int i = 0; i < onSack.size(); i++) {
            cash = onSack.get(i).getCash();
            weight = onSack.get(i).getWeight();
            benefit = onSack.get(i).getBenefit();
            row[0] = cash;
            row[1] = weight;
            row[2] = benefit;
            myModel.addRow(row);
        }
        tb_myitems.setModel(myModel);
    }//GEN-LAST:event_btn_knapsackActionPerformed

    private void mi_sortBenefitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_sortBenefitActionPerformed
        //SortTable
        Collections.sort(sack);
        UpdateTable();
    }//GEN-LAST:event_mi_sortBenefitActionPerformed

    private void tb_itemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_itemsMouseClicked
        //Click Derecho
    }//GEN-LAST:event_tb_itemsMouseClicked

    private void tb_myitemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_myitemsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_myitemsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    public int VertexCover() {
        Graph graph = this.graph;
        int cont = 0;
        int edge;
        ArrayList estos = new ArrayList<>();
        while (graph.getEdgeCount() != 0) {
            edge = (int) (Math.random() * graph.getEdgeCount());
            try {
                Node node0 = graph.getEdge(edge).getNode0();
                Node node1 = graph.getEdge(edge).getNode1();
                graph.removeEdge(edge);
                graph.removeNode(node0.getId());
                graph.removeNode(node1.getId());
                cont += 2;
            } catch (Exception e) {
            }
        }
        return cont;
    }

    public void Grafo1() {
        String id;
        String label;
        for (int i = 0; i < 9; i++) {
            id = i + "";
            label = i + "";
            graph.addNode(id).addAttribute("label", label);
        }
        graph.addEdge("1", "0", "1");
        graph.addEdge("2", "0", "2");
        graph.addEdge("3", "1", "2");
        graph.addEdge("4", "2", "4");
        graph.addEdge("5", "4", "3");
        graph.addEdge("6", "4", "5");
        graph.addEdge("7", "4", "8");
        graph.addEdge("8", "5", "8");
        graph.addEdge("9", "5", "6");
        graph.addEdge("10", "6", "7");
        graph.addEdge("11", "6", "8");
        graph.addEdge("12", "7", "8");
    }

    public void Grafo2() {
        String id;
        String label;
        for (int i = 0; i < 4; i++) {
            id = i + "";
            label = i + "";
            graph.addNode(id).addAttribute("label", label);
        }
        graph.addEdge("1", "0", "1");
        graph.addEdge("2", "0", "2");
        graph.addEdge("3", "0", "3");
        graph.addEdge("4", "1", "2");
        graph.addEdge("6", "1", "3");
        graph.addEdge("7", "2", "3");
    }

    public void Grafo3() {
        String id;
        String label;
        for (int i = 0; i < 7; i++) {
            id = i + "";
            label = i + "";
            graph.addNode(id).addAttribute("label", label);
        }
        graph.addEdge("1", "0", "3");
        graph.addEdge("2", "1", "3");
        graph.addEdge("3", "2", "3");
        graph.addEdge("4", "4", "3");
        graph.addEdge("6", "5", "3");
        graph.addEdge("7", "6", "3");
    }

    public void Grafo4() {
        String id;
        String label;
        for (int i = 0; i < 7; i++) {
            id = i + "";
            label = i + "";
            graph.addNode(id).addAttribute("label", label);
        }
        graph.addEdge("1", "0", "1");
        graph.addEdge("2", "1", "2");
        graph.addEdge("3", "2", "3");
        graph.addEdge("4", "2", "4");
        graph.addEdge("6", "3", "4");
        graph.addEdge("7", "3", "5");
        graph.addEdge("8", "4", "5");
        graph.addEdge("9", "4", "6");
    }

    public void FillList(int size) {
        sack.clear();
        int weigth, cash;
        for (int i = 0; i < size; i++) {
            weigth = (int) (1 + Math.random() * 50);
            cash = (int) (1 + Math.random() * 950);
            sack.add(new Item(weigth, cash));
        }

    }

    public void UpdateTable() {
        DefaultTableModel model = (DefaultTableModel) tb_items.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        Object[] row = new Object[3];
        int cash, weight;
        double benefit;
        for (int i = 0; i < sack.size(); i++) {
            cash = sack.get(i).getCash();
            weight = sack.get(i).getWeight();
            benefit = sack.get(i).getBenefit();
            row[0] = cash;
            row[1] = weight;
            row[2] = benefit;
            model.addRow(row);
        }
        tb_items.setModel(model);
    }

    public ArrayList<Item> KnapSack(int size) {
        ArrayList<Item> newSack = new ArrayList<Item>();
        int onSack = 0;
        int index = 0;
        int newPos = 0;
        while (index < sack.size()) {
            if (onSack + sack.get(index).getWeight() <= size) {
                newSack.add(sack.get(index));
                onSack += newSack.get(newPos).getWeight();
                newPos++;
            }
            index++;
        }
        tf_myweigth.setText(onSack + "");
        return newSack;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Graf1;
    private javax.swing.JButton Graf2;
    private javax.swing.JButton Graf3;
    private javax.swing.JButton Graf4;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel Title1;
    private javax.swing.JButton btn_KnapSack;
    private javax.swing.JButton btn_VertexCover;
    private javax.swing.JButton btn_fillItems;
    private javax.swing.JButton btn_knapsack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JDialog jd_KnapSack;
    private javax.swing.JMenuItem mi_sortBenefit;
    private javax.swing.JPopupMenu pop_Sort;
    private javax.swing.JSpinner sp_cantidad2;
    private javax.swing.JSpinner sp_espacio;
    private javax.swing.JTable tb_items;
    private javax.swing.JTable tb_myitems;
    private javax.swing.JTextField tf_myweigth;
    // End of variables declaration//GEN-END:variables
    Graph graph = new SingleGraph("Mapa");
    ArrayList<Item> sack = new ArrayList<Item>();
    boolean displayed = false;
    int ejemplo = -1;
}
